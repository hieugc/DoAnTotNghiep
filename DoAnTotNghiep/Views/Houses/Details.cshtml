@model DoAnTotNghiep.ViewModels.PackageDetailHouse
@using DoAnTotNghiep.Enum;
@{
    ViewData["Title"] = "Chi tiết nhà";
    Layout = "_Layout";
    string key = (ViewData["key"] as string) ?? string.Empty;
    bool isAuthorize = (ViewData["isAuthorize"] == null ? false: ViewData["isAuthorize"] == "false" ? false : true);
    bool isOwner = (ViewData["isOwner"] == null ? false : ViewData["isOwner"] == "false" ? false : true);
}

<div class="Banner">
    <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="false">
        <div class="carousel-indicators">
            @for(var item = 0; item < Model.Images.Count(); item++){
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@item" class="active" aria-current="true" aria-label="Slide @(item + 1)"></button>
            }
        </div>
        <div class="carousel-inner">
            @for (var item = 0; item < Model.Images.Count(); item++)
            {
                <div class="carousel-item active">
                    <img src="@(Model.Images.ElementAt(item)?.Data)" class="d-block w-100" alt="Step @(item + 1)">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>

<div class="frame">
    <div class="left">
        <div class="option-control">
            <div class="tab-pane tab-active"><a href="#tab1">Thông tin chung</a></div>
            <div class="tab-pane"><a href="#tab2">Giới thiệu</a></div>
            <div class="tab-pane"><a href="#tab3">Tiện nghi</a></div>
            <div class="tab-pane"><a href="#tab4">Quy tắc</a></div>
            <div class="tab-pane"><a href="#tab5">Địa chỉ</a></div>
            <div class="tab-pane"><a href="#tab6">Đánh giá</a></div>
        </div>
        <div class="content">
            <section id="tab1">
                <div class="general">
                    <div>@Model.Name
                    </div>
                    <div>
                        <div class="rating"><span>@Model.Rating (@Model.NumberRating)</span><i class="fa-solid fa-star"></i></div>
                        <div class="point"><strong>@Model.Price (p/ngày)</strong></div>
                    </div>
                </div>
                <div class="">
                    <div><i class="fa-solid fa-house"></i><span>@HouseEnum.HouseType(Model.Option)</span></div>
                    <div><i class="fa-solid fa-users"></i><span>@Model.People</span></div>
                    <div><i class="fa-solid fa-bed"></i><span>@Model.BedRoom</span></div>
                    <div><i class="fa-solid fa-bath"></i><span>@Model.BathRoom</span></div>
                    <div><i class="fa-solid fa-maximize"></i><span>@Model.Square &#13217;</span></div>
                </div>
            </section>

            <section id="tab2">
                <h5>Giới thiệu</h5>
                <p>
                    @Model.Description
                </p>
            </section>

            <section id="tab3">
                <h5>Tiện nghi</h5>
                <div>

                    <div class="item-show">
                    @foreach(var item in Model.AllUtilities)
                    {
                        <div class="item-contain">
                            <div class="item-frame @(Model.Utilities.Contains(item.Id)  ? "item-checked": string.Empty) ">
                                    @Html.Raw(item.Icon)
                                <span>@item.Content</span>
                            </div>
                        </div>
                    }
                    </div>
                </div>
            </section>
            <section id="tab4">
                <h5>Quy tắc</h5>
                <div>
                    <div class="item-show">
                        @foreach (var item in Model.AllRules)
                        {
                            <div class="item-contain">
                                <div class="item-frame @(Model.Rules.Contains(item.Id)  ? "item-checked": string.Empty)">
                                    @Html.Raw(item.Icon)
                                    <span>@item.Content</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </section>
            <section id="tab5">
                <h5>Địa chỉ</h5>
                <div class="frame-map">
                    <div id="myMap" class="BingMap" onload="GetMap(@Model.Lat, @Model.Lng)"></div>
                </div>
            </section>
            <section id="tab6">
            </section>
        </div>
    </div>
    <div class="right">
        <div class="top">
            <div class="user-info">
                @if(Model.User != null){
                    if (!string.IsNullOrEmpty(Model.User.UrlImage))
                    {
                        <div class="avt"><img src="@Model.User.UrlImage" alt="avt-user" /></div>
                    }
                    else{
                        <div class="avt"><img src="~/Image/user.svg" alt="avt-user" /></div>
                    }
                    <div class="info">
                        <h5><span class="name">@(Model.User.FirstName + " " + Model.User.LastName)</span></h5>
                        <div class="rating"><span>@Model.User.UserRating</span><i class="fa-solid fa-star"></i></div>
                    </div>
                }
                else{
                    <div class="avt"><span><i class="fa-solid fa-circle-info"></i></span></div>
                    <div class="info">
                        <h5><span class="name">NotFound</span></h5>
                        <div class="rating"><span>-</span><i class="fa-solid fa-star"></i></div>
                    </div>
                }
            </div>
            <div class="validate">
                <div>
                    <i class="fa-solid fa-house"></i><span>@(Model.User?.NumberOfHouses) căn nhà</span>
                </div>
                <div>
                    <i class="fa-solid fa-phone"></i><span class="text-success">Đã xác thực</span>
                </div>
                <div>
                    <i class="fa-solid fa-envelope"></i><span class="text-success">Đã xác thực</span>
                </div>
            </div>
        </div>
        @if (isAuthorize && !isOwner)
        {
            <div class="bot">
                <div><a href="@Url.Action("Messages", "Member", new {connection = Model.User?.UserAccess})" class="btn btn-primary" style="display: block;">Liên hệ</a></div>
                <div><a href="@Url.Action("OverViewProfile", "Member", new {connection = Model.User?.UserAccess})" class="btn btn-primary" style="display: block;">Thông tin người dùng</a></div>
                <div><button class="btn btn-success" onclick="getRequestFormByHouseId(@Model.Id)">Yêu cầu trao đổi</button></div>
                <div><button class="btn btn-danger" type="button" onclick="renderReportForm('@(Model.User?.UserAccess)')">Báo cáo</button></div>
            </div>
        }
    </div>
</div>

<div id="renderModal"></div>

@section Scripts{
    <!--BingMap-->
    <!--script type='text/javascript'
        src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=@key'
        async defer></!--script-->
    <script type="text/javascript">
        var lat = @Model.Lat;
        var lng = @Model.Lng;
        var map = null;
        var houseItem = @Html.Raw(Json.Serialize(Model))
        function GetMap() {
            let loc = new Microsoft.Maps.Location(lat, lng);
            map = new Microsoft.Maps.Map('#myMap', {
                zoom: 15,
                center: loc,
                customMapStyle: StyleMap()
            });
            var pin = createFontPushpin(loc, '\uF3C5', 'FontAwesome', 45, '#2c3e59', houseItem, e);
            map.entities.push(pin);
            var infobox = new Microsoft.Maps.Infobox(loc, {
                    htmlContent: infoboxTemplate("@Html.Raw(Model.Name)", 1, "@Html.Raw(Model.Location + ", " + Model.WardName + ", " + Model.DistrictName + ", " + Model.CityName)")
            });
            infobox.setMap(map);
        }
        if($(".material-symbols-outlined").length > 3){
            $(".material-symbols-outlined")[3].innerHTML = "mic";
        }
        function infoboxTemplate(title, index, description) {
            return `<div class="customInfobox">
                        <div class="content">
                            <div class="title">${title}</div>
                            <div class="address"><strong>Địa chỉ:</strong> ${description}</div>
                                            <div class="price"><strong>Giá:</strong> ${@Model.Price}</div>
                                    <div class="click"><a href="#" class="btn btn-primary btn-sm"><i class="fa-solid fa-magnifying-glass"></i></a></div>
                        </div>
                    </div>`;
        }
        function createFontPushpin(location, text, fontName, fontSizePx, color, object, index) {
            var c = document.createElement('canvas');
            var ctx = c.getContext('2d');

            //Define font style
            var font = fontSizePx + 'px ' + fontName;
            ctx.font = font

            //Resize canvas based on sie of text.
            var size = ctx.measureText(text);
            c.width = size.width;
            c.height = fontSizePx;

            //Reset font as it will be cleared by the resize.
            ctx.font = font;
            ctx.textBaseline = 'top';
            ctx.fillStyle = color;

            ctx.fillText(text, 0, 0);

            return new Microsoft.Maps.Pushpin(location, {
                icon: c.toDataURL(),
                anchor: new Microsoft.Maps.Point(c.width / 2, c.height / 2),
                title: "@Html.Raw(Model.Name)",
                subTitle: "@Html.Raw(Model.Location)"
            });
        }

    </script>
    <script src="~/js/House/detail.js" type="text/javascript" async defer></script>
    <script src="~/js/Report/index.js" type="text/javascript" async defer></script>
    <script src="~/js/Request/create.js" type="text/javascript"></script>
    <script src="~/js/Request/getFormByHouseId.js" type="text/javascript"></script>
    <script src="~/js/Rating/index.js" type="text/javascript"></script>
    @if (Model.Ratings.Count() > 0)
    {
        <script type="text/javascript">
            renderFrameRating(@Model.Id);
        </script>
    }
}