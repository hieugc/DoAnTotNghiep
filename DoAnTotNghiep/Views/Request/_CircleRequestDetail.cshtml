@using DoAnTotNghiep.Enum;
@model DoAnTotNghiep.ViewModels.CircleRequestViewModel

<div class="card card-@Model.Id mb-3 status status-request-@Model.MyNode.Status">
    <div class="row g-0">
        <div class="col-md-12">
            <div class="user-info d-flex g-1">
                <div class="">
                    <label class="">Địa điểm sẽ đến: <strong>@Model.NextNode.House.CityName</strong></label>
                </div>
            </div>
            <span class="status-@Model.Status text-success">@StatusCircleRequestStr.getStatus(Model.MyNode.Status)</span>
        </div>
        <div class="d-flex col-12 align-items-baseline">
            <div class="request-info">
                <p>
                    Nhà của
                    <span class="user">
                        @if (!string.IsNullOrEmpty(Model.NextNode.User.UrlImage))
                        {
                            <img src="@Model.NextNode.User.UrlImage" alt="avt" />
                        }
                        else
                        {
                            <img src="~/Image/user.svg" alt="avt" />
                        }
                        <span class="name">@Model.NextNode.User.LastName @Model.NextNode.User.FirstName</span>
                    </span>
                    <span> ở <strong>@Model.NextNode.House.CityName</strong> bạn sẽ chuyển đến:</span>
                </p>
            </div>
            <div class="request-info">
                <p>
                    Nhà của <strong>bạn</strong> dùng để đổi:
                </p>
            </div>
            <div class="request-info">
                <p><strong>Thông tin thêm:</strong></p>
            </div>
        </div>
        <div class="d-flex col-12">
            <div class="request-info">
                @(await Html.PartialAsync("~/Views/Houses/_ItemHouse.cshtml", Model.NextNode))
            </div>
            <div class="request-info">
                @(await Html.PartialAsync("~/Views/Houses/_ItemHouse.cshtml", Model.MyNode))
            </div>
            <div class="request-info">
                <div class="mb-3 user-info">
                    Người chuyển đến nhà bạn: 
                    <a href="@Url.Action("OverViewProfile", "Member", new {UserAccess = Model.PrevNode.User.UserAccess})" class="access-info">
                        <span class="user">
                            @if (!string.IsNullOrEmpty(Model.PrevNode.User.UrlImage))
                            {
                                <img src="@Model.PrevNode.User.UrlImage" alt="avt" />
                            }
                            else
                            {
                                <img src="~/Image/user.svg" alt="avt" />
                            }
                            <span class="name">@Model.PrevNode.User.LastName @Model.PrevNode.User.FirstName</span>
                        </span>
                        <span class="tooltiptext">
                            <span class="card">
                                @if (!string.IsNullOrEmpty(Model.PrevNode.User.UrlImage))
                                {
                                    <img src="@Model.PrevNode.User.UrlImage" alt="avt" />
                                }
                                else
                                {
                                    <img src="~/Image/user.svg" alt="avt" />
                                }
                                <span class="container">
                                    <span><b>@Model.PrevNode.User.LastName @Model.PrevNode.User.FirstName</b></span>
                                    <span class="rate">
                                        <span class="frame-start">
                                            <span class="fa fa-star @if(Model.PrevNode.User.UserRating >= 1){@Html.Raw("checked")}"></span>
                                            <span class="fa fa-star @if(Model.PrevNode.User.UserRating >= 2){@Html.Raw("checked")}"></span>
                                            <span class="fa fa-star @if(Model.PrevNode.User.UserRating >= 3){@Html.Raw("checked")}"></span>
                                            <span class="fa fa-star @if(Model.PrevNode.User.UserRating >= 4){@Html.Raw("checked")}"></span>
                                            <span class="fa fa-star @if(Model.PrevNode.User.UserRating >= 5){@Html.Raw("checked")}"></span>
                                        </span>
                                    </span>
                                    <span class="swap">
                                        <span class="label"><span>Số lượt trao đổi: </span><strong>@Model.PrevNode.User.NumberSwap</strong></span>
                                        <span class="label"><span>Số nhà: </span><strong>@Model.PrevNode.User.NumberOfHouses</strong></span>
                                    </span>
                                </span>
                            </span>
                        </span>
                    </a>
                </div>
                <div class="mb-3">
                    <label class="">Thời gian:</label>
                    <span class="value">@Model.StartDate.ToString("dd/MM/yyyy") <span>-</span> @Model.EndDate.ToString("dd/MM/yyyy")</span>
                </div>
                @if (Model.Status == (int)StatusWaitingRequest.INIT){
                    <div class="mb-3">
                        <label class="">Tình trạng:</label>
                        <span class="value">Chờ người khác chấp nhận</span>
                    </div>
                }
                @if (Model.MyNode.Status == (int)StatusWaitingRequest.INIT)
                {
                    <div class="control">
                        <button class="btn btn-outline-secondary" onclick="deleteRequest(@Model.Id, '@Html.Raw("Bạn muốn ẩn gợi ý này chứ?")')">Bỏ qua</button>
                        <button class="btn btn-primary" onclick="updateStatus(@Model.MyNode.IdRequest, @((int)StatusWaitingRequest.ACCEPT), @Model.Id)">Chấp nhận</button>
                    </div>
                }
                else if (Model.MyNode.Status == (int)StatusWaitingRequest.ACCEPT)
                {
                    <div class="control">
                        @if (DateTime.Compare(DateTime.Now, Model.StartDate.AddHours(-12)) < 0)
                        {
                            <button class="btn btn-outline-secondary" onclick="deleteRequest(@Model.Id, '@Html.Raw("Bạn muốn xóa gợi ý này chứ?")')">Xóa</button>
                        }
                        @if (Model.Status == (int)StatusWaitingRequest.ACCEPT)
                        {
                            <button class="btn btn-primary" onclick="updateStatus(@Model.MyNode.IdRequest, @((int)StatusWaitingRequest.CHECK_IN), @Model.Id)">Check In</button>
                        }
                    </div>
                }
                else if (Model.MyNode.Status == (int)StatusWaitingRequest.CHECK_IN && DateTime.Compare(DateTime.Now, Model.EndDate.AddHours(-6)) >= 0)
                {
                    <div class="control" onclick="updateStatus(@Model.MyNode.IdRequest, @((int)StatusWaitingRequest.CHECK_OUT), @Model.Id)">
                        <button class="btn btn-primary">Check Out</button>
                    </div>
                }
                else if (Model.MyNode.Status == (int)StatusWaitingRequest.CHECK_OUT)
                {
                    <div class="control"><button class="btn btn-primary" onclick="renderRatingForm(@Model.Id, null)">Đánh giá ngay</button></div>
                }
            </div>
        </div>
        @if(Model.Rating.Count() > 0)
        {
            <div class="frame-title">Đánh giá từ người dùng</div>
            <div class="d-flex col-12 justify-content-start rating-frame">
                @foreach (var item in Model.Rating)
                {
                    ViewData["isOwner"] = item.IsOwner ? "true" : "false";
                    @(await Html.PartialAsync("~/Views/Rating/_RatingDetail.cshtml", item))
                }
            </div>
        }
    </div>
</div>